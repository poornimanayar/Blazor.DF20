#pragma checksum "C:\WORK\_freelance\Blazor.DF20\Blazor.WASM\Shared\ChildCounterUpdate.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b3b8850732390059ceea1e1a665f9e913b72b86a"
// <auto-generated/>
#pragma warning disable 1591
namespace Blazor.WASM.Shared
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\WORK\_freelance\Blazor.DF20\Blazor.WASM\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\WORK\_freelance\Blazor.DF20\Blazor.WASM\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\WORK\_freelance\Blazor.DF20\Blazor.WASM\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\WORK\_freelance\Blazor.DF20\Blazor.WASM\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\WORK\_freelance\Blazor.DF20\Blazor.WASM\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\WORK\_freelance\Blazor.DF20\Blazor.WASM\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\WORK\_freelance\Blazor.DF20\Blazor.WASM\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\WORK\_freelance\Blazor.DF20\Blazor.WASM\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\WORK\_freelance\Blazor.DF20\Blazor.WASM\_Imports.razor"
using Blazor.WASM;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\WORK\_freelance\Blazor.DF20\Blazor.WASM\_Imports.razor"
using Blazor.WASM.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\WORK\_freelance\Blazor.DF20\Blazor.WASM\_Imports.razor"
using Blazor.WASM.Components;

#line default
#line hidden
#nullable disable
    public partial class ChildCounterUpdate : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.AddMarkupContent(0, "<h3>Child Counter With Child-To-Parent Binding</h3>\r\n\r\n");
            __builder.OpenElement(1, "p");
            __builder.AddContent(2, "Current count: ");
            __builder.AddContent(3, 
#nullable restore
#line 3 "C:\WORK\_freelance\Blazor.DF20\Blazor.WASM\Shared\ChildCounterUpdate.razor"
                   ChildCounterUpdateValue

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(4, "\r\n\r\n");
            __builder.OpenElement(5, "button");
            __builder.AddAttribute(6, "class", "btn btn-primary");
            __builder.AddAttribute(7, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 5 "C:\WORK\_freelance\Blazor.DF20\Blazor.WASM\Shared\ChildCounterUpdate.razor"
                                          IncrementCountChild

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(8, "Update parent counter");
            __builder.CloseElement();
        }
        #pragma warning restore 1998
#nullable restore
#line 7 "C:\WORK\_freelance\Blazor.DF20\Blazor.WASM\Shared\ChildCounterUpdate.razor"
       
    [Parameter]
    public int ChildCounterUpdateValue { get; set; }

    [Parameter]
    public EventCallback<int> ChildCounterUpdateValueChanged { get; set; }

    private async Task IncrementCountChild()
    {
        ChildCounterUpdateValue = ChildCounterUpdateValue + 1;

        await ChildCounterUpdateValueChanged.InvokeAsync(ChildCounterUpdateValue);
    }

    protected override void OnParametersSet()
    {
        Console.WriteLine($"OnParametersSet called {ChildCounterUpdateValue}");
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
